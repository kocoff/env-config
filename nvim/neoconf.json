{
  "neodev": {
    "library": {
      "enabled": true,
      "plugins": [
        "nvim-lspconfig",
        "lsp"
      ]
    }
  },
  "neoconf": {
    "plugins": {
      "lua_ls": { "enabled": true },
      "rust_analyzer": { "enabled": true },
      "jsonls": { "enabled": true },
      "bashls": { "enabled": true },
      "html": { "enabled": true },
      "clangd": { "enabled": true },
  },
  "lspconfig": {
    "lua_ls": {
      "Lua.completion.callSnippet": "Replace",
    },
    "rust_analyzer": {
      "rust-analyzer.checkOnSave.enable": true,
      "rust-analyzer.checkOnSave.command": "clippy",
      "rust-analyzer.callInfo.full": true,
      "rust-analyzer.lens.enable": true,
      "rust-analyzer.inlayHints.enable": true,
      "rust-analyzer.inlayHints.typeHints": true,
      "rust-analyzer.inlayHints.parameterHints": true,
      "rust-analyzer.lens.references": true,
      "rust-analyzer.lens.implementations": true,
      "rust-analyzer.lens.enumVariantReferences": true,
      "rust-analyzer.lens.methodReferences": true,
      "rust-analyzer.cargo.autoreload": true,
      "rust-analyzer.hoverActions.enable": true,
      "rust-analyzer.checkOnSave.allTargets": true,
      "rust-analyzer.cargo.buildScripts.enable": true,
      "rust-analyzer.hoverActions.references": true,
      "rust-analyzer.updates.channel": "system"
  },
  "clangd": {
    "clangd.path": {
        "type": "string",
        "default": "clangd",
        "scope": "machine-overridable",
        "description": "./.local/share/nvim/mason/bin/clangd./.local/share/nvim/mason/bin/clangdarguments": {
        "type": "array",
        "default": [
          "--all-scopes-completion",
          "--background-index",
          "--clang-tidy",
          "--compile_args_from=filesystem", 
          "--compile-commands-dir=./", 
          "--completion-parse=always",
          "--completion-style=bundled",
          "--cross-file-rename",
          "--debug-origin",
          "--enable-config", 
          "--fallback-style=google",
          "--folding-ranges",
          "--function-arg-placeholders",
          "--header-insertion=iwyu",
          "--pch-storage=memory",
          "--suggest-missing-includes",
          "-j=8",
          "--resource-dir=",
          "--log=error"
          ],
        "items": {
            "type": "string"
        },
        "description": "Arguments for clangd server."
    },
    "clangd.trace": {
        "type": "string",
        "description": "Names a file that clangd should log a performance trace to, in chrome trace-viewer JSON format."
    },
    "clangd.semanticHighlighting": {
        "type": "boolean",
        "default": true,
        "description": "Enable semantic highlighting in clangd.",
        "deprecationMessage": "Legacy semanticHighlights is no longer supported. Please use `editor.semanticHighlighting.enabled` instead."
    },
    "clangd.fallbackFlags": {
        "type": "array",
        "default": [],
        "items": {
            "type": "string"
        },
        "description": "Extra clang flags used to parse files when no compilation database is found."
    },
    "clangd.serverCompletionRanking": {
        "type": "boolean",
        "default": true,
        "description": "Always rank completion items on the server as you type. This produces more accurate results at the cost of higher latency than client-side filtering."
    },
    "clangd.restartAfterCrash": {
        "type": "boolean",
        "default": true,
        "description": "Auto restart clangd (up to 4 times) if it crashes."
    },
    "clangd.checkUpdates": {
        "type": "boolean",
        "default": false,
        "description": "Check for language server updates on startup."
    },
    "clangd.onConfigChanged": {
        "type": "string",
        "default": "prompt",
        "description": "What to do when clangd configuration files are changed. Ignored for clangd 12+, which can reload such files itself.",
        "enum": [
            "prompt",
            "restart",
            "ignore"
        ],
        "enumDescriptions": [
            "Prompt the user for restarting the server",
            "Automatically restart the server",
            "Do nothing"
        ]
    },
    "clangd.detectExtensionConflicts": {
        "type": "boolean",
        "default": true,
        "description": "Warn about conflicting extensions and suggest disabling them."
    },
    "clangd.inactiveRegions.useBackgroundHighlight": {
        "type": "boolean",
        "default": false,
        "description": "Use a background highlight rather than opacity to identify inactive preprocessor regions."
    },
    "clangd.inactiveRegions.opacity": {
        "type": "number",
        "default": 0.55,
        "description": "Opacity of inactive regions (used only if clangd.inactiveRegions.useBackgroundHighlight=false)"
    },
    "clangd.enableCodeCompletion": {
      "type": "boolean",
      "default": true,
      "description": "Enable code completion provided by the language server"
    }
  },
}

